/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/models/Avatar.glb -o src/components/Avatar.jsx -r public 
*/

import React, { useRef } from "react";
// import { useGLTF } from "@react-three/drei";
import { useLoader } from '@react-three/fiber';
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
import { useAnimations, useFBX } from '@react-three/drei';
import { useState } from "react";
import { useEffect } from "react";
import { useControls } from "leva";
import { useMemo } from "react";
import { useFrame } from "@react-three/fiber";

const hello_json = {
  "metadata": {
    "soundFile": "3DAvatarJs/public/audios/hello.mp3",
    "duration": 9.19
  },
  "mouthCues": [
    { "start": 0.00, "end": 0.16, "value": "X" },
    { "start": 0.16, "end": 0.27, "value": "C" },
    { "start": 0.27, "end": 0.55, "value": "E" },
    { "start": 0.55, "end": 0.69, "value": "F" },
    { "start": 0.69, "end": 0.91, "value": "B" },
    { "start": 0.91, "end": 0.99, "value": "A" },
    { "start": 0.99, "end": 1.04, "value": "C" },
    { "start": 1.04, "end": 1.08, "value": "B" },
    { "start": 1.08, "end": 1.15, "value": "C" },
    { "start": 1.15, "end": 1.23, "value": "A" },
    { "start": 1.23, "end": 1.45, "value": "B" },
    { "start": 1.45, "end": 1.52, "value": "C" },
    { "start": 1.52, "end": 1.66, "value": "B" },
    { "start": 1.66, "end": 1.85, "value": "D" },
    { "start": 1.85, "end": 1.90, "value": "C" },
    { "start": 1.90, "end": 2.17, "value": "B" },
    { "start": 2.17, "end": 2.31, "value": "C" },
    { "start": 2.31, "end": 2.39, "value": "A" },
    { "start": 2.39, "end": 2.65, "value": "B" },
    { "start": 2.65, "end": 2.72, "value": "C" },
    { "start": 2.72, "end": 2.86, "value": "G" },
    { "start": 2.86, "end": 3.00, "value": "E" },
    { "start": 3.00, "end": 3.14, "value": "B" },
    { "start": 3.14, "end": 3.21, "value": "G" },
    { "start": 3.21, "end": 3.28, "value": "E" },
    { "start": 3.28, "end": 3.42, "value": "F" },
    { "start": 3.42, "end": 3.49, "value": "C" },
    { "start": 3.49, "end": 3.56, "value": "H" },
    { "start": 3.56, "end": 3.70, "value": "C" },
    { "start": 3.70, "end": 3.77, "value": "B" },
    { "start": 3.77, "end": 3.91, "value": "D" },
    { "start": 3.91, "end": 4.12, "value": "B" },
    { "start": 4.12, "end": 4.19, "value": "C" },
    { "start": 4.19, "end": 4.26, "value": "H" },
    { "start": 4.26, "end": 4.32, "value": "A" },
    { "start": 4.32, "end": 4.38, "value": "B" },
    { "start": 4.38, "end": 4.46, "value": "A" },
    { "start": 4.46, "end": 4.59, "value": "C" },
    { "start": 4.59, "end": 4.87, "value": "B" },
    { "start": 4.87, "end": 4.94, "value": "E" },
    { "start": 4.94, "end": 5.36, "value": "B" },
    { "start": 5.36, "end": 5.50, "value": "C" },
    { "start": 5.50, "end": 5.57, "value": "B" },
    { "start": 5.57, "end": 5.64, "value": "C" },
    { "start": 5.64, "end": 5.78, "value": "B" },
    { "start": 5.78, "end": 5.92, "value": "C" },
    { "start": 5.92, "end": 5.99, "value": "B" },
    { "start": 5.99, "end": 6.06, "value": "C" },
    { "start": 6.06, "end": 6.13, "value": "B" },
    { "start": 6.13, "end": 6.25, "value": "A" },
    { "start": 6.25, "end": 6.39, "value": "B" },
    { "start": 6.39, "end": 6.46, "value": "G" },
    { "start": 6.46, "end": 6.60, "value": "B" },
    { "start": 6.60, "end": 6.68, "value": "A" },
    { "start": 6.68, "end": 7.01, "value": "B" },
    { "start": 7.01, "end": 7.26, "value": "X" },
    { "start": 7.26, "end": 7.33, "value": "B" },
    { "start": 7.33, "end": 7.46, "value": "C" },
    { "start": 7.46, "end": 7.54, "value": "A" },
    { "start": 7.54, "end": 7.78, "value": "E" },
    { "start": 7.78, "end": 7.99, "value": "B" },
    { "start": 7.99, "end": 8.06, "value": "C" },
    { "start": 8.06, "end": 8.34, "value": "B" },
    { "start": 8.34, "end": 8.41, "value": "G" },
    { "start": 8.41, "end": 8.48, "value": "C" },
    { "start": 8.48, "end": 8.55, "value": "H" },
    { "start": 8.55, "end": 8.67, "value": "A" },
    { "start": 8.67, "end": 8.81, "value": "C" },
    { "start": 8.81, "end": 8.95, "value": "B" },
    { "start": 8.95, "end": 9.19, "value": "X" }
  ]
}



export function Avatar(props) {
  // const { nodes, materials, scene } = useGLTF("/models/Avatar.glb");
  const {playAudio, script} = useControls({
    playAudio: false,
    script: {
      value: "hello",
      options: ["hello"],
    },

  });

  const headFollow = true;

  const audio = useMemo(() => new Audio(`/audios/${script}.mp3`), [script]);

  useEffect(() => {
    if (playAudio) {
      audio.play();
    }
    else {
      audio.pause()
    }
  }, [playAudio, script])

  const { nodes, materials, scene } = useLoader (GLTFLoader , "models/Avatar.glb");

  const { animations: idle_1 } = useFBX("/animations/animation_1.fbx");
  const { animations: idle_2 } = useFBX("/animations/animation_2.fbx");
  const { animations: idle_3 } = useFBX("/animations/animation_3.fbx");
  const { animations: idle_4 } = useFBX("/animations/animation_4.fbx");
  const { animations: idle_5 } = useFBX("/animations/animation_5.fbx");
  const { animations: idle_6 } = useFBX("/animations/animation_6.fbx");
  
  // console.log(idle_1)

  idle_1[0].name = "idle_1";
  idle_2[0].name = "idle_2";
  idle_3[0].name = "idle_3";
  idle_4[0].name = "idle_4";
  idle_5[0].name = "idle_5";
  idle_6[0].name = "idle_6";

  const [animation, setAnimation] = useState("idle_6");

  const group = useRef();
  const { actions } = useAnimations([idle_1[0], idle_2[0], idle_3[0], idle_4[0], idle_5[0], idle_6[0]], group);

  useEffect(() => {
    actions[animation].reset().fadeIn(0.5).play();
    return () => actions[animation].fadeOut(0.5);
  }, [animation]);

  useFrame((state) => {
    if (headFollow) {
      group.current.getObjectByName("Head").lookAt(state.camera.position);
    }
  });

  return (
    <group {...props} dispose={null} ref={group}>
        <primitive object={scene} />
        <group rotation={[Math.PI / 2, 0, 0]}>

        <skinnedMesh
          geometry={nodes.AvatarBody.geometry}
          material={materials.AvatarBody}
          skeleton={nodes.AvatarBody.skeleton}
        />
        <skinnedMesh
          geometry={nodes.AvatarLeftCornea.geometry}
          material={materials.AvatarLeftCornea}
          skeleton={nodes.AvatarLeftCornea.skeleton}
        />
        <skinnedMesh
          geometry={nodes.AvatarLeftEyeball.geometry}
          material={materials.AvatarLeftEyeball}
          skeleton={nodes.AvatarLeftEyeball.skeleton}
        />
        <skinnedMesh
          geometry={nodes.AvatarRightCornea.geometry}
          material={materials.AvatarRightCornea}
          skeleton={nodes.AvatarRightCornea.skeleton}
        />
        <skinnedMesh
          geometry={nodes.AvatarRightEyeball.geometry}
          material={materials.AvatarRightEyeball}
          skeleton={nodes.AvatarRightEyeball.skeleton}
        />
        <skinnedMesh
          geometry={nodes.AvatarTeethUpper.geometry}
          material={materials.AvatarTeethUpper}
          skeleton={nodes.AvatarTeethUpper.skeleton}
        />
        <skinnedMesh
          geometry={nodes.haircut.geometry}
          material={materials.haircut}
          skeleton={nodes.haircut.skeleton}
        />
        <skinnedMesh
          geometry={nodes.outfit_bottom.geometry}
          material={materials.outfit_bottom}
          skeleton={nodes.outfit_bottom.skeleton}
        />
        <skinnedMesh
          geometry={nodes.outfit_shoes.geometry}
          material={materials.outfit_shoes}
          skeleton={nodes.outfit_shoes.skeleton}
        />
        <skinnedMesh
          geometry={nodes.outfit_top.geometry}
          material={materials.outfit_top}
          skeleton={nodes.outfit_top.skeleton}
        />
        <skinnedMesh
          name="AvatarEyelashes"
          geometry={nodes.AvatarEyelashes.geometry}
          material={materials.AvatarEyelashes}
          skeleton={nodes.AvatarEyelashes.skeleton}
          morphTargetDictionary={nodes.AvatarEyelashes.morphTargetDictionary}
          morphTargetInfluences={nodes.AvatarEyelashes.morphTargetInfluences}
        />
        <skinnedMesh
          name="AvatarHead"
          geometry={nodes.AvatarHead.geometry}
          material={materials.AvatarHead}
          skeleton={nodes.AvatarHead.skeleton}
          morphTargetDictionary={nodes.AvatarHead.morphTargetDictionary}
          morphTargetInfluences={nodes.AvatarHead.morphTargetInfluences}
        />
        <skinnedMesh
          name="AvatarTeethLower"
          geometry={nodes.AvatarTeethLower.geometry}
          material={materials.AvatarTeethLower}
          skeleton={nodes.AvatarTeethLower.skeleton}
          morphTargetDictionary={nodes.AvatarTeethLower.morphTargetDictionary}
          morphTargetInfluences={nodes.AvatarTeethLower.morphTargetInfluences}
        />
      </group>
      </group>

  );
}

// useGLTF.preload("/models/Avatar.glb");
